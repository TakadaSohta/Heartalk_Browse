{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://your-project-name/./scripts/main.js"],"sourcesContent":["// scripts/main.js\r\n\r\n/************************************************\r\n * 1. Firebase初期化\r\n ************************************************/\r\n// Firebaseの設定\r\nconst firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.FIREBASE_APP_ID,\r\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID,\r\n  };\r\n  \r\n  // Firebaseの初期化\r\n  firebase.initializeApp(firebaseConfig);\r\n  const auth = firebase.auth();\r\n  const database = firebase.database();\r\n  const storage = firebase.storage();       // ストレージ\r\n  const messaging = firebase.messaging();   // 通知\r\n  \r\n  /************************************************\r\n   * 2. HTML要素の取得\r\n   ************************************************/\r\n  // ユーザー情報セクション関連\r\n  const userInfoDiv = document.querySelector('.user-info');\r\n  const userNameSpan = document.getElementById('user-name');\r\n  const userImage = document.getElementById('user-image');\r\n  const userHeartRate = document.getElementById('user-heart-rate');\r\n  const signOutBtn = document.getElementById('sign-out');\r\n  \r\n  // プロフィール編集モーダル関連\r\n  const editProfileBtn = document.getElementById('edit-profile');\r\n  const editProfileModal = document.getElementById('edit-profile-modal');\r\n  const closeModalBtn = document.querySelector('.close-button');\r\n  const editProfileForm = document.getElementById('edit-profile-form');\r\n  const editErrorMessageDiv = document.getElementById('edit-error-message');\r\n  \r\n  // エラーメッセージ表示領域\r\n  const container = document.querySelector('.container');\r\n  const errorMessageDiv = document.createElement('div');\r\n  errorMessageDiv.id = 'error-message';\r\n  errorMessageDiv.style.color = 'red';\r\n  errorMessageDiv.style.position = 'fixed';\r\n  errorMessageDiv.style.top = '20px';\r\n  errorMessageDiv.style.left = '50%';\r\n  errorMessageDiv.style.transform = 'translateX(-50%)';\r\n  errorMessageDiv.style.backgroundColor = '#ffbaba';\r\n  errorMessageDiv.style.color = '#d8000c';\r\n  errorMessageDiv.style.padding = '10px 20px';\r\n  errorMessageDiv.style.borderRadius = '8px';\r\n  errorMessageDiv.style.display = 'none';\r\n  errorMessageDiv.style.zIndex = '1000';\r\n  container.prepend(errorMessageDiv);\r\n  \r\n  // フレンド情報セクション\r\n  const permittedUsersDiv = document.querySelector('.permitted-users');\r\n  const permittedUsersList = document.getElementById('permitted-users-list');\r\n  \r\n  // その他\r\n  const loadingScreen = document.getElementById('loading-screen');\r\n  \r\n  /************************************************\r\n   * 3. 多言語対応（言語ファイルの読み込み）\r\n   ************************************************/\r\n  let currentLanguage = 'ja'; // デフォルト言語\r\n  let languageData = {};\r\n  \r\n  // 言語ファイルを読み込む関数\r\n  function loadLanguage(lang) {\r\n      fetch(`lang/${lang}.json`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              languageData = data;\r\n              applyLanguage();\r\n          })\r\n          .catch(error => {\r\n              console.error('言語ファイルの読み込みエラー:', error);\r\n          });\r\n  }\r\n  \r\n  // 言語を適用する関数\r\n  function applyLanguage() {\r\n      // 例: ラベルやテキストの更新\r\n      const headerTitle = document.getElementById('header-title');\r\n      if (headerTitle) {\r\n          headerTitle.textContent =\r\n              languageData.header_title || \"ユーザー情報とフレンド情報\";\r\n      }\r\n  \r\n      const userInfoHeader = document.querySelector('.user-info h2');\r\n      if (userInfoHeader) {\r\n          userInfoHeader.textContent =\r\n              languageData.user_info_title || \"自分のアカウント\";\r\n      }\r\n  \r\n      const editProfileButton = document.getElementById('edit-profile');\r\n      if (editProfileButton) {\r\n          editProfileButton.textContent =\r\n              languageData.edit_profile || \"プロフィール編集\";\r\n      }\r\n  \r\n      const signOutButton = document.getElementById('sign-out');\r\n      if (signOutButton) {\r\n          signOutButton.textContent =\r\n              languageData.sign_out || \"サインアウト\";\r\n      }\r\n  \r\n      // 他の要素も必要に応じて更新\r\n  }\r\n  \r\n  // 言語を設定する関数\r\n  function setLanguage(lang) {\r\n      currentLanguage = lang;\r\n      loadLanguage(lang);\r\n  }\r\n  \r\n  // ページ読み込み時にデフォルト言語をロード\r\n  window.addEventListener('load', () => {\r\n      loadLanguage(currentLanguage);\r\n      if (auth.currentUser) {\r\n          requestNotificationPermission();\r\n      }\r\n  });\r\n  \r\n  /************************************************\r\n   * 4. エラー表示系のヘルパー関数\r\n   ************************************************/\r\n  function showError(message) {\r\n      errorMessageDiv.textContent = message;\r\n      errorMessageDiv.style.display = 'block';\r\n      setTimeout(() => {\r\n          errorMessageDiv.textContent = '';\r\n          errorMessageDiv.style.display = 'none';\r\n      }, 5000);\r\n  }\r\n  \r\n  function showEditError(message) {\r\n      editErrorMessageDiv.textContent = message;\r\n      editErrorMessageDiv.style.display = 'block';\r\n      setTimeout(() => {\r\n          editErrorMessageDiv.textContent = '';\r\n          editErrorMessageDiv.style.display = 'none';\r\n      }, 5000);\r\n  }\r\n  \r\n  /************************************************\r\n   * 5. モーダル制御（プロフィール編集）\r\n   ************************************************/\r\n  // モーダル表示\r\n  function openModal() {\r\n      editProfileModal.style.display = 'block';\r\n      // 現在のユーザー情報をフォームにセット\r\n      if (editProfileForm['edit-username']) {\r\n          editProfileForm['edit-username'].value = userNameSpan.textContent;\r\n      } else {\r\n          console.error('edit-username フィールドが見つかりません');\r\n      }\r\n      // editProfileForm['edit-userimage'].value = userImage.src; // 削除\r\n  }\r\n  \r\n  // モーダル非表示\r\n  function closeModal() {\r\n      editProfileModal.style.display = 'none';\r\n      editErrorMessageDiv.style.display = 'none';\r\n      // 画像編集関連をリセット\r\n      cancelCrop();\r\n  }\r\n  \r\n  // イベントリスナーの追加（存在確認を含む）\r\n  if (editProfileBtn) {\r\n      editProfileBtn.addEventListener('click', openModal);\r\n  } else {\r\n      console.error('edit-profile ボタンが見つかりません');\r\n  }\r\n  \r\n  if (closeModalBtn) {\r\n      closeModalBtn.addEventListener('click', closeModal);\r\n  } else {\r\n      console.error('close-button が見つかりません');\r\n  }\r\n  \r\n  window.addEventListener('click', (event) => {\r\n      if (event.target == editProfileModal) {\r\n          closeModal();\r\n      }\r\n  });\r\n  \r\n  window.addEventListener('keydown', (event) => {\r\n      if (event.key === 'Escape' && editProfileModal.style.display === 'block') {\r\n          closeModal();\r\n      }\r\n  });\r\n  \r\n  /************************************************\r\n   * 6. ローディング画面制御\r\n   ************************************************/\r\n  function showLoading() {\r\n      if (loadingScreen) {\r\n          loadingScreen.style.display = 'flex';\r\n      } else {\r\n          console.error('loading-screen が見つかりません');\r\n      }\r\n  }\r\n  \r\n  function hideLoading() {\r\n      if (loadingScreen) {\r\n          loadingScreen.style.display = 'none';\r\n      } else {\r\n          console.error('loading-screen が見つかりません');\r\n      }\r\n  }\r\n  \r\n  /************************************************\r\n   * 7. ユーザー認証状態の監視\r\n   ************************************************/\r\n  auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n          console.log('ユーザーがサインインしています:', user);\r\n          if (userInfoDiv) {\r\n              userInfoDiv.style.display = 'flex';\r\n          }\r\n          if (permittedUsersDiv) {\r\n              permittedUsersDiv.style.display = 'block';\r\n          }\r\n  \r\n          // ローディング画面を表示\r\n          showLoading();\r\n  \r\n          // データ読み込み\r\n          Promise.all([\r\n              fetchUserData(user.uid),\r\n              fetchPermittedUsers(user.uid)\r\n          ]).then(() => {\r\n              // 心拍数履歴の取得とグラフ描画\r\n              fetchHeartRateHistory(user.uid);\r\n              hideLoading();\r\n          }).catch((error) => {\r\n              console.error('データロードエラー:', error);\r\n              showError('データのロードに失敗しました。');\r\n              hideLoading();\r\n          });\r\n  \r\n      } else {\r\n          console.log('ユーザーがサインアウトしています。');\r\n          if (userInfoDiv) {\r\n              userInfoDiv.style.display = 'none';\r\n          }\r\n          if (permittedUsersDiv) {\r\n              permittedUsersDiv.style.display = 'none';\r\n          }\r\n          if (permittedUsersList) {\r\n              permittedUsersList.innerHTML = '';\r\n          }\r\n          window.location.href = 'index.html'; // ログイン画面にリダイレクト\r\n      }\r\n  });\r\n  \r\n  /************************************************\r\n   * 8. ユーザーデータの取得・表示\r\n   ************************************************/\r\n  function fetchUserData(uid) {\r\n      return new Promise((resolve, reject) => {\r\n          const userRef = database.ref(`Username/${uid}`);\r\n          userRef.once('value')\r\n              .then((snapshot) => {\r\n                  const data = snapshot.val();\r\n                  if (data) {\r\n                      userNameSpan.textContent = data.UName || \"名前未設定\";\r\n                      userImage.src = data.Uimage || \"https://via.placeholder.com/100\";\r\n                  } else {\r\n                      userNameSpan.textContent = \"名前未設定\";\r\n                      userImage.src = \"https://via.placeholder.com/100\";\r\n                  }\r\n                  resolve();\r\n              })\r\n              .catch((error) => {\r\n                  console.error('ユーザーデータ取得エラー:', error);\r\n                  showError('ユーザーデータの取得に失敗しました。');\r\n                  reject(error);\r\n              });\r\n  \r\n          // 最新の心拍数の取得\r\n          const heartRateRef = database.ref(`Userdata/${uid}/Heartbeat/Watch1`);\r\n          heartRateRef.on('value', (snapshot) => {\r\n              const data = snapshot.val();\r\n              if (data && data.HeartRate) {\r\n                  userHeartRate.textContent = data.HeartRate;\r\n                  // 心拍数履歴に追加\r\n                  const historyRef = database.ref(`Userdata/${uid}/HeartbeatHistory`).push();\r\n                  historyRef.set({\r\n                      HeartRate: data.HeartRate,\r\n                      timestamp: firebase.database.ServerValue.TIMESTAMP\r\n                  })\r\n                      .then(() => {\r\n                          console.log('心拍数履歴に追加しました。');\r\n                      })\r\n                      .catch((error) => {\r\n                          console.error('心拍数履歴追加エラー:', error);\r\n                          showError('心拍数履歴の追加に失敗しました。');\r\n                      });\r\n              } else {\r\n                  userHeartRate.textContent = \"-\";\r\n              }\r\n  \r\n              // QRコード生成\r\n              generateQRCode(uid);\r\n  \r\n              // 一度だけ読んだらリスナーをオフに\r\n              heartRateRef.off('value');\r\n              resolve();\r\n          }, (error) => {\r\n              console.error('心拍数データ取得エラー:', error);\r\n              showError('心拍数データの取得に失敗しました。');\r\n              reject(error);\r\n          });\r\n      });\r\n  }\r\n  \r\n  /************************************************\r\n   * 9. 許可されたユーザー（フレンド）情報の取得・表示\r\n   ************************************************/\r\n  function fetchPermittedUsers(uid) {\r\n      return new Promise((resolve, reject) => {\r\n          const permittedUsersRef = database.ref(`AcceptUser/${uid}/permittedUser`);\r\n          permittedUsersRef.once('value')\r\n              .then((snapshot) => {\r\n                  const permittedUsers = snapshot.val();\r\n                  if (permittedUsersList) {\r\n                      permittedUsersList.innerHTML = ''; // リストをクリア\r\n                  } else {\r\n                      console.error('permitted-users-list が見つかりません');\r\n                  }\r\n                  if (permittedUsers) {\r\n                      const permittedUids = Object.keys(permittedUsers).filter(key => permittedUsers[key] === true);\r\n                      if (permittedUids.length === 0) {\r\n                          const noFriendsMsg = languageData.no_friends || \"許可されたフレンドがいません。\";\r\n                          if (permittedUsersList) {\r\n                              permittedUsersList.innerHTML = `<p>${noFriendsMsg}</p>`;\r\n                          }\r\n                          resolve();\r\n                          return;\r\n                      }\r\n                      // 許可されたユーザーの情報を取得して表示\r\n                      Promise.all(permittedUids.map(permittedUid => displayPermittedUser(permittedUid)))\r\n                          .then(() => {\r\n                              resolve();\r\n                          })\r\n                          .catch((error) => {\r\n                              console.error('許可されたユーザー情報取得エラー:', error);\r\n                              showError('許可されたユーザー情報の取得に失敗しました。');\r\n                              reject(error);\r\n                          });\r\n                  } else {\r\n                      const noFriendsMsg = languageData.no_friends || \"許可されたフレンドがいません。\";\r\n                      if (permittedUsersList) {\r\n                          permittedUsersList.innerHTML = `<p>${noFriendsMsg}</p>`;\r\n                      }\r\n                      resolve();\r\n                  }\r\n              })\r\n              .catch((error) => {\r\n                  console.error('許可されたユーザーデータ取得エラー:', error);\r\n                  showError('許可されたユーザーデータの取得に失敗しました。');\r\n                  reject(error);\r\n              });\r\n      });\r\n  }\r\n  \r\n  function displayPermittedUser(permittedUid) {\r\n      return new Promise((resolve, reject) => {\r\n          // ユーザー名と画像の取得\r\n          const usernameRef = database.ref(`Username/${permittedUid}`);\r\n          const userdataRef = database.ref(`Userdata/${permittedUid}/Heartbeat/Watch1`);\r\n  \r\n          Promise.all([\r\n              usernameRef.once('value'),\r\n              userdataRef.once('value')\r\n          ]).then(([usernameSnapshot, userdataSnapshot]) => {\r\n              const usernameData = usernameSnapshot.val();\r\n              const userdata = userdataSnapshot.val();\r\n  \r\n              const userName = usernameData ? usernameData.UName || \"名前未設定\" : \"名前未設定\";\r\n              const userImageUrl = usernameData ? (usernameData.Uimage || \"https://via.placeholder.com/90\") : \"https://via.placeholder.com/90\";\r\n              const heartRate = userdata && userdata.HeartRate ? userdata.HeartRate : \"-\";\r\n  \r\n              // カード生成\r\n              const userCard = document.createElement('div');\r\n              userCard.className = 'user-card';\r\n  \r\n              const img = document.createElement('img');\r\n              img.src = userImageUrl;\r\n              img.alt = `${userName} の画像`;\r\n              img.loading = 'lazy';\r\n  \r\n              const userInfo = document.createElement('div');\r\n              userInfo.className = 'user-info';\r\n              userInfo.innerHTML = `<p class=\"user-name\">${userName}</p><p class=\"heart-rate\">${heartRate}</p>`;\r\n  \r\n              userCard.appendChild(img);\r\n              userCard.appendChild(userInfo);\r\n  \r\n              if (permittedUsersList) {\r\n                  permittedUsersList.appendChild(userCard);\r\n              }\r\n  \r\n              resolve();\r\n          }).catch((error) => {\r\n              console.error('許可されたユーザー情報取得エラー:', error);\r\n              showError('許可されたユーザー情報の取得に失敗しました。');\r\n              reject(error);\r\n          });\r\n      });\r\n  }\r\n  \r\n  /************************************************\r\n   * 10. 心拍数履歴グラフの描画\r\n   ************************************************/\r\n  const heartRateChartCtx = document.getElementById('heartRateChart').getContext('2d');\r\n  let heartRateChart = null;\r\n  \r\n  function fetchHeartRateHistory(uid) {\r\n      const heartRateHistoryRef = database.ref(`Userdata/${uid}/HeartbeatHistory`);\r\n      heartRateHistoryRef.on('value', (snapshot) => {\r\n          const heartRateData = snapshot.val();\r\n          if (heartRateData) {\r\n              // データを日時順にソート\r\n              const sortedData = Object.entries(heartRateData).sort((a, b) => new Date(a[1].timestamp) - new Date(b[1].timestamp));\r\n              const labels = sortedData.map(entry => new Date(entry[1].timestamp).toLocaleString()); // 修正：timestampを使用\r\n              const data = sortedData.map(entry => entry[1].HeartRate);\r\n  \r\n              // グラフ更新\r\n              if (heartRateChart) {\r\n                  heartRateChart.data.labels = labels;\r\n                  heartRateChart.data.datasets[0].data = data;\r\n                  heartRateChart.update();\r\n              } else {\r\n                  heartRateChart = new Chart(heartRateChartCtx, {\r\n                      type: 'line',\r\n                      data: {\r\n                          labels: labels,\r\n                          datasets: [{\r\n                              label: '心拍数',\r\n                              data: data,\r\n                              borderColor: '#e74c3c',\r\n                              backgroundColor: 'rgba(231, 76, 60, 0.2)',\r\n                              fill: true,\r\n                              tension: 0.4\r\n                          }]\r\n                      },\r\n                      options: {\r\n                          responsive: true,\r\n                          scales: {\r\n                              x: {\r\n                                  display: true,\r\n                                  title: {\r\n                                      display: true,\r\n                                      text: '日時'\r\n                                  }\r\n                              },\r\n                              y: {\r\n                                  display: true,\r\n                                  title: {\r\n                                      display: true,\r\n                                      text: '心拍数'\r\n                                  },\r\n                                  suggestedMin: 60,\r\n                                  suggestedMax: 100\r\n                              }\r\n                          }\r\n                      }\r\n                  });\r\n              }\r\n          }\r\n      }, (error) => {\r\n          console.error('心拍数履歴データ取得エラー:', error);\r\n          showError('心拍数履歴データの取得に失敗しました。');\r\n      });\r\n  }\r\n  \r\n  /************************************************\r\n   * 11. 通知の許可＆FCMトークン\r\n   ************************************************/\r\n  function requestNotificationPermission() {\r\n      messaging.requestPermission()\r\n          .then(() => {\r\n              console.log('通知の許可が得られました。');\r\n              return messaging.getToken();\r\n          })\r\n          .then((token) => {\r\n              console.log('FCMトークン:', token);\r\n              // トークンをデータベースに保存\r\n              const uid = auth.currentUser.uid;\r\n              database.ref(`Users/${uid}/fcmToken`).set(token);\r\n          })\r\n          .catch((error) => {\r\n              console.error('通知の許可が拒否されました:', error);\r\n              showError('通知の許可が拒否されました。');\r\n          });\r\n  }\r\n  \r\n  // 通知を受信した際の処理\r\n  messaging.onMessage((payload) => {\r\n      console.log('受信したメッセージ:', payload);\r\n      const notificationTitle = payload.notification.title;\r\n      const notificationOptions = {\r\n          body: payload.notification.body,\r\n          icon: payload.notification.icon || 'https://via.placeholder.com/100'\r\n      };\r\n  \r\n      if (Notification.permission === 'granted') {\r\n          new Notification(notificationTitle, notificationOptions);\r\n      }\r\n  });\r\n  \r\n  /************************************************\r\n   * 12. サインアウト処理\r\n   ************************************************/\r\n  if (signOutBtn) {\r\n      signOutBtn.addEventListener('click', () => {\r\n          auth.signOut()\r\n              .then(() => {\r\n                  console.log('サインアウト成功');\r\n                  window.location.href = 'index.html'; // ログイン画面にリダイレクト\r\n              })\r\n              .catch((error) => {\r\n                  console.error('サインアウトエラー:', error);\r\n                  showError('サインアウトに失敗しました。');\r\n              });\r\n      });\r\n  } else {\r\n      console.error('sign-out ボタンが見つかりません');\r\n  }\r\n  \r\n  /************************************************\r\n   * 13. フレンド検索機能（検索ボックス）\r\n   ************************************************/\r\n  function filterFriends() {\r\n      const friendSearchInput = document.getElementById('friend-search');\r\n      if (!friendSearchInput) {\r\n          console.error('friend-search 入力フィールドが見つかりません');\r\n          return;\r\n      }\r\n      const input = friendSearchInput.value.toLowerCase();\r\n      const userCards = permittedUsersList.getElementsByClassName('user-card');\r\n  \r\n      for (let i = 0; i < userCards.length; i++) {\r\n          const userInfo = userCards[i].getElementsByClassName('user-info')[0];\r\n          if (!userInfo) {\r\n              console.error('user-info セクションが見つかりません');\r\n              continue;\r\n          }\r\n          const nameElement = userInfo.getElementsByTagName('p')[0];\r\n          if (!nameElement) {\r\n              console.error('user-name 要素が見つかりません');\r\n              continue;\r\n          }\r\n          const name = nameElement.innerText.toLowerCase();\r\n          if (name.includes(input)) {\r\n              userCards[i].style.display = \"\";\r\n          } else {\r\n              userCards[i].style.display = \"none\";\r\n          }\r\n      }\r\n  }\r\n  \r\n  // イベントリスナーの追加（存在確認を含む）\r\n  const friendSearchInput = document.getElementById('friend-search');\r\n  if (friendSearchInput) {\r\n      friendSearchInput.addEventListener('keyup', filterFriends);\r\n  } else {\r\n      console.error('friend-search 入力フィールドが見つかりません');\r\n  }\r\n  \r\n  /************************************************\r\n   * 14. QRコード生成\r\n   ************************************************/\r\n  function generateQRCode(uid) {\r\n      const qrContainer = document.getElementById('qr-code');\r\n      if (!qrContainer || !uid) {\r\n          console.error('QRコード生成に必要な要素またはUIDがありません');\r\n          return;\r\n      }\r\n      qrContainer.innerHTML = '';\r\n      new QRCode(qrContainer, {\r\n          text: uid,\r\n          width: 180,\r\n          height: 180,\r\n          colorDark: \"#1d1d1f\",\r\n          colorLight: \"#ffffff\",\r\n          correctLevel: QRCode.CorrectLevel.H\r\n      });\r\n  }\r\n  \r\n  /************************************************\r\n   * 15. サイドメニューなどUI周り（例）\r\n   ************************************************/\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n      const menuToggle = document.getElementById('menu-toggle');\r\n      const sidebar = document.getElementById('sidebar');\r\n      const overlay = document.getElementById('sidebar-overlay');\r\n  \r\n      if (menuToggle && sidebar && overlay) {\r\n          function openMenu() {\r\n              sidebar.classList.add('active');\r\n              overlay.classList.add('active');\r\n          }\r\n          function closeMenu() {\r\n              sidebar.classList.remove('active');\r\n              overlay.classList.remove('active');\r\n          }\r\n          menuToggle.addEventListener('click', function () {\r\n              if (sidebar.classList.contains('active')) {\r\n                  closeMenu();\r\n              } else {\r\n                  openMenu();\r\n              }\r\n          });\r\n          overlay.addEventListener('click', function () {\r\n              closeMenu();\r\n          });\r\n          document.addEventListener('keydown', function (e) {\r\n              if (e.key === 'Escape' && sidebar.classList.contains('active')) {\r\n                  closeMenu();\r\n              }\r\n          });\r\n      } else {\r\n          console.error('サイドメニュー関連の要素が見つかりません');\r\n      }\r\n  });\r\n  \r\n  /************************************************\r\n   * 16. 画像アップロード & クロップ機能の統合\r\n   ************************************************/\r\n  // DOM要素（アップロード関連）\r\n  const dropZone = document.getElementById('drop-zone');\r\n  const fileInput = document.getElementById('image-input');\r\n  const cropContainer = document.getElementById('crop-container');\r\n  const previewImage = document.querySelector('#image-preview img'); // 修正済み\r\n  \r\n  // 画像アップロード関連変数\r\n  let cropper = null;\r\n  let currentImageFile = null;\r\n  \r\n  /**\r\n   * アップロードの初期化\r\n   */\r\n  function initImageUpload() {\r\n      if (!dropZone || !fileInput) {\r\n          console.error('ドロップゾーンまたはファイル入力が見つかりません');\r\n          return;\r\n      }\r\n  \r\n      // ドラッグ＆ドロップイベント\r\n      dropZone.addEventListener('dragover', handleDragOver);\r\n      dropZone.addEventListener('dragleave', handleDragLeave);\r\n      dropZone.addEventListener('drop', handleDrop);\r\n  \r\n      // クリックでファイル選択\r\n      dropZone.addEventListener('click', () => fileInput.click());\r\n  \r\n      // ファイル選択イベント\r\n      fileInput.addEventListener('change', handleFileSelect);\r\n  }\r\n  \r\n  // イベントハンドラ\r\n  function handleDragOver(e) {\r\n      e.preventDefault();\r\n      dropZone.classList.add('dragover');\r\n  }\r\n  function handleDragLeave() {\r\n      dropZone.classList.remove('dragover');\r\n  }\r\n  function handleDrop(e) {\r\n      e.preventDefault();\r\n      dropZone.classList.remove('dragover');\r\n      if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n          handleImageFile(e.dataTransfer.files[0]);\r\n      }\r\n  }\r\n  function handleFileSelect(e) {\r\n      if (e.target.files && e.target.files[0]) {\r\n          handleImageFile(e.target.files[0]);\r\n      }\r\n  }\r\n  \r\n  /**\r\n   * 画像ファイルを処理してクロップ画面へ\r\n   */\r\n  function handleImageFile(file) {\r\n      try {\r\n          validateImageFile(file);\r\n          currentImageFile = file;\r\n  \r\n          // FileをDataURLに変換\r\n          readFileAsDataURL(file).then((imageSrc) => {\r\n              openCropEditor(imageSrc);\r\n          }).catch((error) => {\r\n              showEditError(error.message);\r\n          });\r\n      } catch (error) {\r\n          showEditError(error.message);\r\n      }\r\n  }\r\n  \r\n  /**\r\n   * 画像ファイルのバリデーション\r\n   */\r\n  function validateImageFile(file) {\r\n      const MAX_SIZE_MB = 5;\r\n      const ALLOWED_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\r\n  \r\n      if (!file) throw new Error('ファイルが選択されていません');\r\n      if (!ALLOWED_TYPES.includes(file.type)) {\r\n          throw new Error('JPEG/PNG/GIF形式の画像を選択してください');\r\n      }\r\n      if (file.size > MAX_SIZE_MB * 1024 * 1024) {\r\n          throw new Error(`ファイルサイズは${MAX_SIZE_MB}MB以下にしてください`);\r\n      }\r\n  }\r\n  \r\n  /**\r\n   * FileオブジェクトをDataURL化\r\n   */\r\n  function readFileAsDataURL(file) {\r\n      return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = () => reject(new Error('ファイルの読み込みに失敗しました'));\r\n          reader.readAsDataURL(file);\r\n      });\r\n  }\r\n  \r\n  /**\r\n   * クロップエディタを起動\r\n   */\r\n  function openCropEditor(imageSrc) {\r\n      if (!dropZone || !cropContainer || !previewImage) {\r\n          console.error('クロップエディタ関連の要素が見つかりません');\r\n          return;\r\n      }\r\n  \r\n      dropZone.style.display = 'none';                   // ドロップゾーンを隠す\r\n      document.querySelector('.crop-editor').style.display = 'block'; // クロップ画面を表示\r\n  \r\n      destroyCropper();  // 既存Cropperの破棄\r\n      initializeCropper(imageSrc);\r\n  }\r\n  \r\n  function initializeCropper(imageSrc) {\r\n      if (!cropContainer) {\r\n          console.error('crop-container が見つかりません');\r\n          return;\r\n      }\r\n  \r\n      cropContainer.innerHTML = `<img src=\"${imageSrc}\" alt=\"編集用画像\">`;\r\n      const imageElement = cropContainer.querySelector('img');\r\n  \r\n      if (!imageElement) {\r\n          console.error('クロップ用の画像要素が見つかりません');\r\n          return;\r\n      }\r\n  \r\n      cropper = new Cropper(imageElement, {\r\n          aspectRatio: 1,\r\n          viewMode: 1,\r\n          autoCropArea: 0.8,\r\n          responsive: true,\r\n          preview: '#image-preview', // プレビューを設定\r\n          guides: false\r\n      });\r\n  }\r\n  \r\n  /**\r\n   * クロップをキャンセル\r\n   */\r\n  function cancelCrop() {\r\n      if (!dropZone || !cropContainer || !previewImage) {\r\n          console.error('クロップキャンセル関連の要素が見つかりません');\r\n          return;\r\n      }\r\n  \r\n      dropZone.style.display = 'block';\r\n      document.querySelector('.crop-editor').style.display = 'none';\r\n      destroyCropper();\r\n      currentImageFile = null;\r\n      previewImage.src = '';\r\n  }\r\n  \r\n  /**\r\n   * Cropperインスタンスを破棄\r\n   */\r\n  function destroyCropper() {\r\n      if (cropper) {\r\n          cropper.destroy();\r\n          cropper = null;\r\n      }\r\n  }\r\n  \r\n  /**\r\n   * トリミングしてBlobを得る\r\n   */\r\n  async function getCroppedBlob() {\r\n      if (!cropper) throw new Error('画像が選択されていません');\r\n  \r\n      // 例として512x512で出力\r\n      const canvas = cropper.getCroppedCanvas({\r\n          width: 512,\r\n          height: 512,\r\n          fillColor: '#fff',\r\n          imageSmoothingQuality: 'high'\r\n      });\r\n  \r\n      return new Promise((resolve, reject) => {\r\n          canvas.toBlob((blob) => {\r\n              if (blob) {\r\n                  resolve(blob);\r\n              } else {\r\n                  reject(new Error('クロップした画像の生成に失敗しました'));\r\n              }\r\n          }, 'image/jpeg', 0.95);\r\n      });\r\n  }\r\n  \r\n  /**\r\n   * クロップを適用してプレビューを更新（必要なら）\r\n   */\r\n  async function applyCrop() {\r\n      try {\r\n          const blob = await getCroppedBlob();\r\n          const previewUrl = URL.createObjectURL(blob);\r\n          previewImage.src = previewUrl;\r\n  \r\n          // クロップエディタを閉じて、再度ドロップゾーンを表示\r\n          document.querySelector('.crop-editor').style.display = 'none';\r\n          if (dropZone) {\r\n              dropZone.style.display = 'block';\r\n          }\r\n  \r\n          destroyCropper();\r\n      } catch (error) {\r\n          showEditError(error.message);\r\n      }\r\n  }\r\n  \r\n  // ボタンのイベントリスナー\r\n  const cropCancelBtn = document.querySelector('.crop-cancel-btn');\r\n  const cropConfirmBtn = document.querySelector('.crop-confirm-btn');\r\n  \r\n  if (cropCancelBtn) {\r\n      cropCancelBtn.addEventListener('click', cancelCrop);\r\n  } else {\r\n      console.error('crop-cancel-btn が見つかりません');\r\n  }\r\n  \r\n  if (cropConfirmBtn) {\r\n      cropConfirmBtn.addEventListener('click', applyCrop);\r\n  } else {\r\n      console.error('crop-confirm-btn が見つかりません');\r\n  }\r\n  \r\n  /************************************************\r\n   * 17. プロフィール更新（フォーム送信）\r\n   ************************************************/\r\n  if (editProfileForm) {\r\n      editProfileForm.addEventListener('submit', async (event) => {\r\n          event.preventDefault();\r\n  \r\n          // 更新するユーザー名\r\n          const newNameInput = editProfileForm['edit-username'];\r\n          if (!newNameInput) {\r\n              showEditError('edit-username フィールドが見つかりません');\r\n              console.error('edit-username フィールドが見つかりません');\r\n              return;\r\n          }\r\n          const newName = newNameInput.value.trim();\r\n  \r\n          // 現在認証中のユーザー\r\n          const uid = auth.currentUser ? auth.currentUser.uid : null;\r\n  \r\n          if (!uid) {\r\n              showEditError('ユーザーが認証されていません');\r\n              console.error('ユーザーが認証されていません');\r\n              return;\r\n          }\r\n          if (!newName) {\r\n              showEditError('名前を入力してください。');\r\n              console.error('名前が入力されていません');\r\n              return;\r\n          }\r\n  \r\n          try {\r\n              showLoading();\r\n              console.log('ローディング画面を表示');\r\n  \r\n              // デフォルトは既存のimageURL（現在のプロフィール画像）\r\n              let imageUrl = userImage.src;\r\n              console.log('既存の画像URL:', imageUrl);\r\n  \r\n              // 新しいファイルが選択されている場合はアップロード\r\n              if (currentImageFile && cropper) {\r\n                  console.log('新しい画像ファイルが選択されています');\r\n                  // Cropped画像をBlobで取得\r\n                  const blob = await getCroppedBlob();\r\n                  console.log('Cropped Blob を取得:', blob);\r\n                  // Storageにアップロード\r\n                  imageUrl = await uploadCroppedImage(blob, uid);\r\n                  console.log('アップロード後の画像URL:', imageUrl);\r\n              }\r\n  \r\n              // DB更新\r\n              await updateUserProfile(uid, newName, imageUrl);\r\n              console.log('Firebase Realtime Database を更新');\r\n  \r\n              // UI更新\r\n              userNameSpan.textContent = newName;\r\n              userImage.src = imageUrl;\r\n              console.log('UIを更新');\r\n  \r\n              // モーダルを閉じる\r\n              closeModal();\r\n              console.log('モーダルを閉じる');\r\n  \r\n          } catch (error) {\r\n              showEditError(`更新に失敗しました: ${error.message}`);\r\n              console.error('更新エラー:', error);\r\n          } finally {\r\n              hideLoading();\r\n              console.log('ローディング画面を非表示');\r\n          }\r\n      });\r\n  } else {\r\n      console.error('edit-profile-form が見つかりません');\r\n  }\r\n  \r\n  /**\r\n   * クロップした画像をStorageにアップロードしてURLを返す\r\n   */\r\n  async function uploadCroppedImage(blob, uid) {\r\n      const filename = `profile_${Date.now()}.jpg`;\r\n      const storageRef = storage.ref(`users/${uid}/images/${filename}`);\r\n      const snapshot = await storageRef.put(blob);\r\n      return await snapshot.ref.getDownloadURL();\r\n  }\r\n  \r\n  /**\r\n   * ユーザー情報をRealtime Databaseに更新\r\n   */\r\n  async function updateUserProfile(uid, name, imageUrl) {\r\n      const updates = {\r\n          UName: name,\r\n          Uimage: imageUrl,\r\n          lastUpdated: firebase.database.ServerValue.TIMESTAMP\r\n      };\r\n      await database.ref(`Username/${uid}`).update(updates);\r\n  }\r\n  "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_arrayLikeToArray","Array","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","storage","messaging","userInfoDiv","document","querySelector","userNameSpan","getElementById","userImage","userHeartRate","signOutBtn","editProfileBtn","editProfileModal","closeModalBtn","editProfileForm","editErrorMessageDiv","container","errorMessageDiv","createElement","id","style","color","position","top","left","transform","backgroundColor","padding","borderRadius","display","zIndex","prepend","permittedUsersDiv","permittedUsersList","loadingScreen","languageData","showError","message","textContent","setTimeout","showEditError","closeModal","cancelCrop","showLoading","console","error","hideLoading","fetchPermittedUsers","uid","reject","ref","concat","once","snapshot","permittedUsers","val","innerHTML","permittedUids","filter","key","noFriendsMsg","no_friends","all","map","permittedUid","usernameRef","userdataRef","_ref","_ref2","isArray","_arrayWithHoles","_iterableToArrayLimit","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","usernameSnapshot","userdataSnapshot","usernameData","userdata","userName","UName","userImageUrl","Uimage","heartRate","HeartRate","userCard","className","img","src","alt","loading","userInfo","appendChild","displayPermittedUser","window","addEventListener","fetch","response","json","data","headerTitle","header_title","userInfoHeader","user_info_title","editProfileButton","edit_profile","signOutButton","sign_out","applyLanguage","currentUser","requestPermission","log","getToken","token","set","event","target","onAuthStateChanged","user","heartRateRef","on","timestamp","ServerValue","TIMESTAMP","qrContainer","QRCode","text","width","height","colorDark","colorLight","correctLevel","CorrectLevel","H","generateQRCode","off","heartRateData","sortedData","entries","sort","b","Date","labels","entry","toLocaleString","heartRateChart","datasets","update","Chart","heartRateChartCtx","label","borderColor","fill","tension","options","responsive","scales","x","title","suggestedMin","suggestedMax","fetchHeartRateHistory","location","href","getContext","onMessage","payload","notificationTitle","notification","notificationOptions","body","icon","Notification","permission","signOut","friendSearchInput","input","toLowerCase","userCards","getElementsByClassName","nameElement","getElementsByTagName","innerText","includes","menuToggle","sidebar","overlay","closeMenu","classList","remove","contains","add","dropZone","cropContainer","previewImage","cropper","currentImageFile","destroyCropper","destroy","getCroppedBlob","_getCroppedBlob","_callee2","canvas","_context2","getCroppedCanvas","fillColor","imageSmoothingQuality","toBlob","blob","_applyCrop","_callee3","previewUrl","_context3","URL","createObjectURL","t0","cropCancelBtn","cropConfirmBtn","uploadCroppedImage","_x2","_x3","_uploadCroppedImage","_callee4","filename","storageRef","_context4","now","put","getDownloadURL","updateUserProfile","_x4","_x5","_x6","_updateUserProfile","_callee5","imageUrl","updates","_context5","lastUpdated","_ref3","_callee","newNameInput","newName","_context","preventDefault","trim","_x"],"sourceRoot":""}