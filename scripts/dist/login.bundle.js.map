{"version":3,"file":"login.bundle.js","mappings":"MAkBEA,SAASC,cAZY,CACnBC,OAAQC,0CACRC,WAAYD,6BACZE,YAAaF,iDACbG,UAAWH,aACXI,cAAeJ,yBACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAKjB,IAAMQ,EAAOX,SAASW,OAChBC,EAAWZ,SAASY,WAGpBC,EAAkBC,SAASC,eAAe,kBAC1CC,EAAiBF,SAASC,eAAe,iBACzCE,EAAkBH,SAASC,eAAe,iBAC1CG,EAAYJ,SAASC,eAAe,cAItCI,EAAe,CAAC,EAmFpB,SAASC,EAAUC,GACfJ,EAAgBK,YAAcD,EAC9BJ,EAAgBM,MAAMC,QAAU,QAChCC,YAAW,WACPR,EAAgBK,YAAc,GAC9BL,EAAgBM,MAAMC,QAAU,MACpC,GAAG,IACP,CAZAE,OAAOC,iBAAiB,QAAQ,WA3EhC,IAAsBC,IAJA,KAKlBC,QAAQC,IAAI,qBAADC,OAAsBH,EAAI,UACrCI,MAAM,QAADD,OAASH,EAAI,UACbK,MAAK,SAAAC,GAEF,GADAL,QAAQC,IAAI,gBAAiBI,IACxBA,EAASC,GACV,MAAM,IAAIC,MAAM,yBAEpB,OAAOF,EAASG,MACpB,IACCJ,MAAK,SAAAK,GACFT,QAAQC,IAAI,SAAUQ,GACtBnB,EAAemB,EAS3B,WAEI,IAAMC,EAAczB,SAASC,eAAe,gBACxCwB,IACAA,EAAYjB,YAAcH,EAAaqB,cAAgB,QAI3D,IAAMC,EAAgB3B,SAASC,eAAe,kBAC1C0B,IACAA,EAAcnB,YAAcH,EAAauB,QAAU,SAGvD,IAAMC,EAAqB7B,SAASC,eAAe,wBAWnD,GAVI4B,IACAA,EAAmBrB,YAAcH,EAAayB,cAAgB,aAI9D/B,IACAA,EAAgBgC,UAAY,0FAAHd,OAA6FZ,EAAauB,QAAU,UAI7IxB,EAAW,CACX,IAAM4B,EAAiBhC,SAASC,eAAe,iBACzCC,EAAiBF,SAASC,eAAe,iBAC3C+B,IACAA,EAAexB,YAAcH,EAAauB,QAAU,SAEpD1B,IACAA,EAAeM,YAAcH,EAAa4B,QAAU,OAE5D,CAGA,IAAMC,EAAalC,SAASC,eAAe,SACvCiC,IACAA,EAAWC,YAAc9B,EAAa+B,mBAAqB,WAG/D,IAAMC,EAAgBrC,SAASC,eAAe,YAC1CoC,IACAA,EAAcF,YAAc9B,EAAaiC,sBAAwB,QAEzE,CArDYC,EACJ,IAAE,OACK,SAAAC,GACHzB,QAAQyB,MAAM,kBAAmBA,EACrC,GA4DR,IAaIzC,GACAA,EAAgBc,iBAAiB,SAAS,WACtCE,QAAQC,IAAI,4BACZ,IAAMyB,EAAW,IAAIvD,SAASW,KAAK6C,mBACnC7C,EAAK8C,gBAAgBF,GAChBtB,MAAK,SAACyB,GAEH7B,QAAQC,IAAI,kBAAmB4B,EAAOC,MACtCjC,OAAOkC,SAASC,KAAO,WAC3B,IAAE,OACK,SAACP,GACJzB,QAAQyB,MAAM,mBAAoBA,GAClClC,EAAUD,EAAa2C,cAAgB,gBAC3C,GACR,IAIA5C,GACAA,EAAUS,iBAAiB,UAAU,SAACoC,GAClCA,EAAMC,iBACNnC,QAAQC,IAAI,wBAEZ,IAAMmC,EAAQnD,SAASC,eAAe,SAASmD,MAAMC,OAC/CC,EAAWtD,SAASC,eAAe,YAAYmD,MAAMC,OAEtDF,GAAUG,EAKfzD,EAAK0D,2BAA2BJ,EAAOG,GAClCnC,MAAK,SAACqC,GACHzC,QAAQC,IAAI,cAAewC,EAAeX,MAC1CjC,OAAOkC,SAASC,KAAO,WAC3B,IAAE,OACK,SAACP,GACJzB,QAAQyB,MAAM,eAAgBA,GAC9BlC,EAAUD,EAAa2C,cAAgB,gBAC3C,IAZA1C,EAAUD,EAAaoD,oBAAsB,0BAarD,IAIAvD,GACAA,EAAeW,iBAAiB,SAAS,WACrCE,QAAQC,IAAI,0BACZ,IAAMmC,EAAQnD,SAASC,eAAe,SAASmD,MAAMC,OAC/CC,EAAWtD,SAASC,eAAe,YAAYmD,MAAMC,OAEtDF,GAAUG,EAKfzD,EAAK6D,+BAA+BP,EAAOG,GACtCnC,MAAK,SAACqC,GACHzC,QAAQC,IAAI,UAAWwC,EAAeX,MACtC,IAAMc,EAAMH,EAAeX,KAAKc,IAEhC7D,EAAS8D,IAAI,YAAD3C,OAAa0C,IAAOE,IAAI,CAChCC,MAAO,GACPC,OAAQ,KAEZjE,EAAS8D,IAAI,YAAD3C,OAAa0C,IAAOE,IAAI,CAChC,GAEJ/D,EAAS8D,IAAI,cAAD3C,OAAe0C,IAAOE,IAAI,CAClC,GAEJjD,OAAOkC,SAASC,KAAO,WAC3B,IAAE,OACK,SAACP,GACJzB,QAAQyB,MAAM,WAAYA,GAC1BlC,EAAUD,EAAa2D,cAAgB,eAC3C,IAxBA1D,EAAUD,EAAaoD,oBAAsB,0BAyBrD,IAIJzD,SAASa,iBAAiB,oBAAoB,WAC1C,IAAMoD,EAAQjE,SAASkE,cAAc,SACrCD,EAAME,OAAQ,EACdF,EAAMG,OAAM,OAAO,WAEfH,EAAME,OAAQ,EACdF,EAAMG,MACV,GACJ,G","sources":["webpack://your-project-name/./scripts/login.js"],"sourcesContent":["// scripts/login.js\r\n\r\n/************************************************\r\n * 1. Firebase初期化\r\n ************************************************/\r\n// Firebaseの設定\r\nconst firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.FIREBASE_APP_ID,\r\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID,\r\n  };\r\n  \r\n  // Firebaseの初期化\r\n  firebase.initializeApp(firebaseConfig);\r\n  const auth = firebase.auth();\r\n  const database = firebase.database();\r\n  \r\n  // HTML要素の取得\r\n  const googleSignInBtn = document.getElementById('google-sign-in');\r\n  const emailSignUpBtn = document.getElementById('email-sign-up');\r\n  const errorMessageDiv = document.getElementById('error-message');\r\n  const loginForm = document.getElementById('login-form'); // フォームの取得\r\n  \r\n  // 言語データの変数\r\n  let currentLanguage = 'ja'; // デフォルト言語を日本語に設定\r\n  let languageData = {};\r\n  \r\n  // 言語ファイルを読み込む関数\r\n  function loadLanguage(lang) {\r\n      console.log(`言語ファイルをロード中: lang/${lang}.json`);\r\n      fetch(`lang/${lang}.json`)\r\n          .then(response => {\r\n              console.log('言語ファイルのレスポンス:', response);\r\n              if (!response.ok) {\r\n                  throw new Error('ネットワークレスポンスがOKではありません');\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(data => {\r\n              console.log('言語データ:', data);\r\n              languageData = data;\r\n              applyLanguage();\r\n          })\r\n          .catch(error => {\r\n              console.error('言語ファイルの読み込みエラー:', error);\r\n          });\r\n  }\r\n  \r\n  // 言語を適用する関数\r\n  function applyLanguage() {\r\n      // ヘッダー\r\n      const headerTitle = document.getElementById('header-title');\r\n      if (headerTitle) {\r\n          headerTitle.textContent = languageData.header_title || \"ログイン\";\r\n      }\r\n  \r\n      // ログインセクション\r\n      const signinHeading = document.getElementById('signin-heading');\r\n      if (signinHeading) {\r\n          signinHeading.textContent = languageData.signin || \"サインイン\";\r\n      }\r\n  \r\n      const signinEmailHeading = document.getElementById('signin-email-heading');\r\n      if (signinEmailHeading) {\r\n          signinEmailHeading.textContent = languageData.signin_email || \"メールでサインイン\";\r\n      }\r\n  \r\n      // サインインボタン\r\n      if (googleSignInBtn) {\r\n          googleSignInBtn.innerHTML = `<img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google Logo\"> ${languageData.signin || \"サインイン\"}`;\r\n      }\r\n  \r\n      // メールサインイン・サインアップボタン\r\n      if (loginForm) {\r\n          const emailSignInBtn = document.getElementById('email-sign-in');\r\n          const emailSignUpBtn = document.getElementById('email-sign-up');\r\n          if (emailSignInBtn) {\r\n              emailSignInBtn.textContent = languageData.signin || \"サインイン\";\r\n          }\r\n          if (emailSignUpBtn) {\r\n              emailSignUpBtn.textContent = languageData.signup || \"新規登録\";\r\n          }\r\n      }\r\n  \r\n      // 入力フィールドのプレースホルダー\r\n      const emailInput = document.getElementById('email');\r\n      if (emailInput) {\r\n          emailInput.placeholder = languageData.email_placeholder || \"メールアドレス\";\r\n      }\r\n  \r\n      const passwordInput = document.getElementById('password');\r\n      if (passwordInput) {\r\n          passwordInput.placeholder = languageData.password_placeholder || \"パスワード\";\r\n      }\r\n  }\r\n  \r\n  // 言語を設定する関数\r\n  function setLanguage(lang) {\r\n      currentLanguage = lang;\r\n      loadLanguage(lang);\r\n  }\r\n  \r\n  // ページ読み込み時にデフォルト言語をロード\r\n  window.addEventListener('load', () => {\r\n      loadLanguage(currentLanguage);\r\n  });\r\n  \r\n  // エラーメッセージ表示関数\r\n  function showError(message) {\r\n      errorMessageDiv.textContent = message;\r\n      errorMessageDiv.style.display = 'block';\r\n      setTimeout(() => {\r\n          errorMessageDiv.textContent = '';\r\n          errorMessageDiv.style.display = 'none';\r\n      }, 5000); // 5秒後にメッセージを消す\r\n  }\r\n  \r\n  // Google サインイン\r\n  if (googleSignInBtn) {\r\n      googleSignInBtn.addEventListener('click', () => {\r\n          console.log('Googleサインインボタンがクリックされました'); // デバッグ用\r\n          const provider = new firebase.auth.GoogleAuthProvider();\r\n          auth.signInWithPopup(provider)\r\n              .then((result) => {\r\n                  // サインイン成功\r\n                  console.log('Google サインイン成功:', result.user);\r\n                  window.location.href = 'main.html'; // メイン画面にリダイレクト\r\n              })\r\n              .catch((error) => {\r\n                  console.error('Google サインインエラー:', error);\r\n                  showError(languageData.error_signin || \"サインインに失敗しました。\");\r\n              });\r\n      });\r\n  }\r\n  \r\n  // メールでサインイン\r\n  if (loginForm) {\r\n      loginForm.addEventListener('submit', (event) => {\r\n          event.preventDefault(); // デフォルトのフォーム送信を防ぐ\r\n          console.log('メールサインインフォームが送信されました'); // デバッグ用\r\n  \r\n          const email = document.getElementById('email').value.trim();\r\n          const password = document.getElementById('password').value.trim();\r\n  \r\n          if (!email || !password) {\r\n              showError(languageData.error_empty_fields || \"メールアドレスとパスワードを入力してください。\");\r\n              return;\r\n          }\r\n  \r\n          auth.signInWithEmailAndPassword(email, password)\r\n              .then((userCredential) => {\r\n                  console.log('メールサインイン成功:', userCredential.user);\r\n                  window.location.href = 'main.html'; // メイン画面にリダイレクト\r\n              })\r\n              .catch((error) => {\r\n                  console.error('メールサインインエラー:', error);\r\n                  showError(languageData.error_signin || \"サインインに失敗しました。\");\r\n              });\r\n      });\r\n  }\r\n  \r\n  // メールで新規登録\r\n  if (emailSignUpBtn) {\r\n      emailSignUpBtn.addEventListener('click', () => {\r\n          console.log('メールサインアップボタンがクリックされました'); // デバッグ用\r\n          const email = document.getElementById('email').value.trim();\r\n          const password = document.getElementById('password').value.trim();\r\n  \r\n          if (!email || !password) {\r\n              showError(languageData.error_empty_fields || \"メールアドレスとパスワードを入力してください。\");\r\n              return;\r\n          }\r\n  \r\n          auth.createUserWithEmailAndPassword(email, password)\r\n              .then((userCredential) => {\r\n                  console.log('新規登録成功:', userCredential.user);\r\n                  const uid = userCredential.user.uid;\r\n                  // ユーザーデータをデータベースに追加\r\n                  database.ref(`Username/${uid}`).set({\r\n                      UName: \"\", // 初期値として空\r\n                      Uimage: \"\" // 初期値として空\r\n                  });\r\n                  database.ref(`Userdata/${uid}`).set({\r\n                      // 初期データを必要に応じて設定\r\n                  });\r\n                  database.ref(`AcceptUser/${uid}`).set({\r\n                      // 初期データを必要に応じて設定\r\n                  });\r\n                  window.location.href = 'main.html'; // メイン画面にリダイレクト\r\n              })\r\n              .catch((error) => {\r\n                  console.error('新規登録エラー:', error);\r\n                  showError(languageData.error_signup || \"新規登録に失敗しました。\");\r\n              });\r\n      });\r\n  }\r\n  \r\n  // ビデオの再生制御\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n      const video = document.querySelector('video');\r\n      video.muted = true; // ミュートを設定\r\n      video.play().catch(() => {\r\n          // 自動再生がブロックされた場合、ミュートを設定して再試行\r\n          video.muted = true;\r\n          video.play();\r\n      });\r\n  });\r\n  "],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","googleSignInBtn","document","getElementById","emailSignUpBtn","errorMessageDiv","loginForm","languageData","showError","message","textContent","style","display","setTimeout","window","addEventListener","lang","console","log","concat","fetch","then","response","ok","Error","json","data","headerTitle","header_title","signinHeading","signin","signinEmailHeading","signin_email","innerHTML","emailSignInBtn","signup","emailInput","placeholder","email_placeholder","passwordInput","password_placeholder","applyLanguage","error","provider","GoogleAuthProvider","signInWithPopup","result","user","location","href","error_signin","event","preventDefault","email","value","trim","password","signInWithEmailAndPassword","userCredential","error_empty_fields","createUserWithEmailAndPassword","uid","ref","set","UName","Uimage","error_signup","video","querySelector","muted","play"],"sourceRoot":""}